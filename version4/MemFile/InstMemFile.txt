/**
 * @file	InstMemFile.txt
 * @author	LiuChuanXi
 * @date	2021.05.29
 * @version	V4.0
 * @brief	指令只读存储器ROM，属于InstMem模块，以十六进制存放指令
 * @par	修改日志
 * <table>
 * <tr><th>Date			<th>Version		<th>Author		<th>Description
 * <tr><td>2021.04.28	<td>V1.0		<td>LiuChuanXi	<td>创建初始版本
 * <tr><td>2021.05.25	<td>V1.1		<td>LiuChuanXi	<td>version1基本指令测试完成
 * <tr><td>2021.05.26	<td>V2.0		<td>LiuChuanXi	<td>version2
 * <tr><td>2021.05.26	<td>V2.1		<td>LiuChuanXi	<td>version2测试完成
 * <tr><td>2021.05.28	<td>V3.0		<td>LiuChuanXi	<td>version3
 * <tr><td>2021.05.28	<td>V3.1		<td>LiuChuanXi	<td>version3测试完成
 * <tr><td>2021.05.29	<td>V4.0		<td>LiuChuanXi	<td>version4
 * </table>
 */

/* 程序入口，0号地址单元 */
@0000
20 10 00 06		//  addi $16, $0, 6          ; 11: addi $s0, $zero, 6 #累加目标值 
02 51 90 20		//  add $18, $18, $17        ; 14: add $s2, $s2, $s1 #计算累加 
00 11 98 80		//  sll $19, $17, 2          ; 15: sll $s3, $s1, 2 #计算地址 
36 73 04 00		//  ori $19, $19, 1024       ; 16: ori $s3, $s3, 0x00000400 #映射到IO的地址 
ae 72 00 00		//  sw $18, 0($19)           ; 17: sw $s2, 0($s3) #将结果写入RAM 
22 31 00 01		//  addi $17, $17, 1         ; 18: addi $s1, $s1, 1 #计数器自加 
12 30 00 02		//  beq $17, $16, 8 [loop2-0x00400018]
08 10 00 01		//  j 0x00400004 [loop1]     ; 20: j loop1 #继续循环 
22 31 ff ff		//  addi $17, $17, -1        ; 23: sub $s1, $s1, 1 #自减 
00 11 98 80		//  sll $19, $17, 2          ; 24: sll $s3, $s1, 2 #计算地址 
36 73 04 00		//  ori $19, $19, 1024       ; 25: ori $s3, $s3, 0x00000400 #映射到IO的地址 
8e 74 00 00		//  lw $20, 0($19)           ; 26: lw $s4, 0($s3) #从RAM中读取数据到$s4 
12 20 00 02		//  beq $17, $0, 8 [end-0x00400030]; 27: beq $s1, $zero, end #减到0 
08 10 00 08		//  j 0x00400020 [loop2]     ; 28: j loop2 #继续循环 
08 10 00 0e		//  j 0x00400038 [end]       ; 31: j end #死循环，程序结束 


/* pc初始值对应的地址空间，使用空指令NOP */
@03FC
00 00 00 00


